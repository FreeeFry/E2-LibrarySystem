@name Active Suspension Lib 1.0
@persist [AttachmentPoints Hydraulics Wheels InitialLengths MinimumConstants MaximumConstants MaximumDampings]:array [Scale]:normal [Base]:entity OverrideLength
@outputs WheelBaseDistance LengthDifferenceFactor InitialLength AttachmentPoint:vector Hydraulic:wirelink NewConstant
@autoupdate

# Parameters: Base entity, WheelsEntity array, HydraulicsWirelink array, StartingCoordinateVector array, MinimumHydraulic constant, MaximumHydraulic constant, ActiveEffect scale, InitialHydraulicLengthOverride length
function initSuspension(BaseEntity:entity, WheelsArray:array, HydraulicsArray:array, InitialCoordinates:array, MinConstants:array, MaxConstants:array, MaxDampings:array, EffectScale, OverrideInitialLength)
{
    AttachmentPoints = InitialCoordinates
    MinimumConstants = MinConstants
    MaximumConstants = MaxConstants
    MaximumDampings = MaxDampings
    Hydraulics = HydraulicsArray
    Wheels = WheelsArray
    Scale = EffectScale
    Base = BaseEntity
    OverrideLength = OverrideInitialLength
    
    for(I=1,Wheels:count())
    {
        Wheel = Wheels[I, entity]
        Hydraulic = Hydraulics[I, wirelink]
        AttachmentPoint = AttachmentPoints[I, vector]
        
        HydraulicLength = (OverrideInitialLength > 0 ? OverrideInitialLength : Base:toWorld(AttachmentPoint):distance(Wheel:massCenter()))
        InitialLengths[I, number] = HydraulicLength
        
        Hydraulic["Length", number] = HydraulicLength
        Hydraulic["Constant", number] = MaximumConstants[I, number]
        Hydraulic["Damping", number] = MaximumDampings[I, number]
    }
}

function activeSuspension_Offroad() # Will soften suspension when it encounters resistance, allowing for more suspension travel.
{
    for(I=1,Wheels:count())
    {
        Wheel = Wheels[I, entity]
        Hydraulic = Hydraulics[I, wirelink]
        AttachmentPoint = AttachmentPoints[I, vector]
        InitialLength = InitialLengths[I, number]
        
        WheelBaseDistance = Base:toWorld(AttachmentPoint):distance(Wheel:massCenter())
        LengthDifferenceFactor = WheelBaseDistance/InitialLength
        
        NewConstant = clamp(MaximumConstants[I, number] - (MaximumConstants[I, number] * ((1*Scale) - (LengthDifferenceFactor*Scale))), MinimumConstants[I, number], MaximumConstants[I, number])
        
        Hydraulic["Constant", number] = NewConstant
        
    }
}

function activeSuspension_Stabilize() # Will try to keep the base level at all times by adjusting the suspension accordingly.
{
    
}
