@name Active Suspension Lib 1.0
@persist [AttachmentPoints Hydraulics Wheels InitialLengths]:array [MinimumConstant MaximumConstant MaximumDamping Scale]:normal [Base]:entity OverrideLength
@outputs WheelBaseDistance LengthDifferenceFactor InitialLength AttachmentPoint:vector Hydraulic:wirelink NewConstant
@autoupdate

# Parameters: Base entity, Slave entity, Steer left Key, Steer right Key, Pod wirelink, Max steer angle, Active steer factor, Idle steer factor, Rotation angle, Override Initital Hydraulic Length.
function initSuspension(BaseEntity:entity, WheelsArray:array, HydraulicsArray:array, InitialCoordinates:array, MinConstant, MaxConstant, MaxDamping, EffectScale, OverrideInitialLength)
{
    AttachmentPoints = InitialCoordinates
    MinimumConstant = MinConstant
    MaximumConstant = MaxConstant
    MaximumDamping = MaxDamping
    Hydraulics = HydraulicsArray
    Wheels = WheelsArray
    Scale = EffectScale
    Base = BaseEntity
    OverrideLength = OverrideInitialLength
    
    for(I=1,Wheels:count())
    {
        Wheel = Wheels[I, entity]
        Hydraulic = Hydraulics[I, wirelink]
        AttachmentPoint = AttachmentPoints[I, vector]
        
        HydraulicLength = (OverrideInitialLength > 0 ? OverrideInitialLength : Base:toWorld(AttachmentPoint):distance(Wheel:massCenter()))
        InitialLengths[I, number] = HydraulicLength
        
        Hydraulic["Length", number] = HydraulicLength
        Hydraulic["Constant", number] = MaximumConstant
        Hydraulic["Damping", number] = MaximumDamping
    }
}

function activeSuspension_Offroad() # Will soften suspension when it encounters resistance, allowing for more suspension travel.
{
    for(I=1,Wheels:count())
    {
        Wheel = Wheels[I, entity]
        Hydraulic = Hydraulics[I, wirelink]
        AttachmentPoint = AttachmentPoints[I, vector]
        InitialLength = InitialLengths[I, number]
        
        WheelBaseDistance = Base:toWorld(AttachmentPoint):distance(Wheel:massCenter())
        LengthDifferenceFactor = WheelBaseDistance/InitialLength
        
        NewConstant = clamp(MaximumConstant - (MaximumConstant * ((1*Scale) - (LengthDifferenceFactor*Scale))), MinimumConstant, MaximumConstant)
        
        Hydraulic["Constant", number] = NewConstant
        
    }
}

function activeSuspension_Stabilize() # Will try to keep the base level at all times by adjusting the suspension accordingly.
{
    
}
